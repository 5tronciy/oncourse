apply plugin: 'com.github.node-gradle.node'
apply plugin: 'queryLanguageModel'

node {
    version = '12.9.1'
    yarnVersion = '1.19.2'
    download = true
    workDir = file("${project.buildDir}/nodejs")
}

configurations {
    queryLanguageModelSource
}

dependencies {
    queryLanguageModelSource "ish.oncourse.willow:waCommon:$waCommonWebservicesClientVersion:sources"
}

yarn.outputs.cacheIf { true }

task webpack(type: YarnTask, dependsOn: 'queryGrammar') {
    inputs.files("webpack.config.js", "tsconfig.json", "yarn.lock", "package.json", "jest.config.js")
    inputs.dir("src")
    outputs.dir("$buildDir/assets")
    args = ['build:prod', '--env.BUILD_NUMBER', version ?: 'SNAPSHOT']
}

clean {
    delete "${projectDir}/node_modules"
}

task yarn_start(type: YarnTask) {
    inputs.files("webpack.config.js", "webpack.dev.config.js", "tsconfig.json", "yarn.lock", "package.json")
    args = ['start']
}

task yarn_outdated(type: YarnTask) {
    args = ['outdated']
}

task queryGrammar(type: YarnTask, dependsOn: [':server-api:swagger', 'yarn', 'generateQueryLanguageModel']) {
    inputs.dir("$rootDir/buildSrc/aql/src/main/resources/")
    outputs.dir("$buildDir/generated-sources/aql")
    args = ['antlr4ts']
}

task jest(type: YarnTask, dependsOn: 'queryGrammar') {
    args = ['test']
}
test.dependsOn(jest)

sourceSets {
    main.resources.srcDirs 'src/js', 'build/generated-sources'
}

task buildLogin(type: YarnTask, dependsOn: 'queryGrammar') {
    inputs.files("webpack.login.config.js", "yarn.lock", "tsconfig.login.bundle.json", "package.json")
    inputs.dir("src")
    outputs.dir("$buildDir/login")
    args = ['build:prod:loginApp']
}

build.dependsOn(webpack, buildLogin)

generateQueryLanguageModel {
    source = zipTree(configurations.queryLanguageModelSource.find { it.name.startsWith("waCommon") })
            .plus(fileTree("$buildDir/../../common/src/main/java"))

    destinationDir = file("$buildDir/generated-sources")
}

processResources.dependsOn(':server-api:swagger', "generateQueryLanguageModel")