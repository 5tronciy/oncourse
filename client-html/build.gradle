apply plugin: 'com.moowork.node'
apply plugin: 'queryLanguageModel'

node {
    version = '9.11.2'
    yarnVersion = '1.17.3'
    download = true
    workDir = file("${project.buildDir}/nodejs")
}

configurations {
    queryLanguageModelSource
}

dependencies {
    queryLanguageModelSource "ish.oncourse.willow:waCommon:$waCommonWebservicesClientVersion:sources"
}

yarn.outputs.cacheIf { true }

task webpack(type: YarnTask) {
    inputs.files("webpack.config.js", "tsconfig.json", "yarn.lock", "package.json", "jest.config.js")
    inputs.dir("src")
    outputs.dir("$buildDir/assets")
    args = ['build:prod', '--env.BUILD_NUMBER', version ?: 'SNAPSHOT']
}

task jest(type: NodeTask, dependsOn: 'yarn') {
    script = project.file('node_modules/.bin/jest')
    args = ['--ci', '--testResultsProcessor=jest-junit']
}

task queryGrammar(type: YarnTask, dependsOn: 'yarn_install') {
    args = ['antlr4ts']
}

sourceSets {
    main.resources.srcDirs 'src/js', 'build/generated-sources'
}

build.dependsOn(webpack, queryGrammar)

task buildLogin_unix(type: NodeTask, dependsOn: ['yarn', ':server-api:swagger']) {
    inputs.files("webpack.login.config.js", "tsconfig.json", "yarn.lock", "loginBundleTsConifig.json", "package.json")
    inputs.dir("src")
    outputs.dir("$buildDir/login")

    script = file('node_modules/.bin/webpack')
    args = ['--env.NODE_ENV', 'production', '--config', 'webpack.login.config.js']
}

task buildLogin_win(type:Exec, dependsOn: ['yarn', ':server-api:swagger']) {
    inputs.files("webpack.login.config.js", "tsconfig.json", "yarn.lock", "loginBundleTsConifig.json", "package.json")
    inputs.dir("src")
    outputs.dir("$buildDir/login")

    workingDir '.'
    executable projectDir.getAbsolutePath() + '\\.gradle\\nodejs\\node-v' + project.extensions.getByName('node').version + '-win-x64\\node.exe'
    args = ['node_modules/webpack/bin/webpack.js/', '--env.NODE_ENV', 'production', '--config', 'webpack.login.config.js']
}

generateQueryLanguageModel {
    source = zipTree(configurations.queryLanguageModelSource.find { it.name.startsWith("waCommon") })
        .plus(fileTree("$buildDir/../../common/src/main/java"))

    destinationDir = file("$buildDir/generated-sources")
}

processResources.dependsOn(':server-api:swagger', "generateQueryLanguageModel")