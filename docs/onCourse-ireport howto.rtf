{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red15\green66\blue152;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20100\viewh13440\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Beside other techniques onCourse offers JasperReports engine to print data. \
\

\b the basics
\b0 \
Jasper report is a specially formatted text file. For ease of use the file can be edited with a visual editor called iReport. For onCourse 1.7.x you have to use iReport version 3.0.0, check the documentation for newer releases. \
\
The report file format is called XML, this is a snippet from an example report file:\
\
				<staticText>\
					<reportElement\
						style="Footer"\
						x="0"\
						y="79"\
						width="430"\
						height="16"\
						key="staticText-8">\
							<printWhenExpression><![CDATA[new Boolean($V\{PAGE_NUMBER\}.intValue()==1)]]></printWhenExpression>\
						</reportElement>\
					<box>					<topPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>\
					<leftPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>\
					<bottomPen lineWidth="0.0" lineColor="#000000"/>\
					<rightPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>\
					</box>\
					<textElement textAlignment="Center">\
						<font size="12"/>\
					</textElement>\
				<text><![CDATA[has fulfilled requirements for]]></text>\
				</staticText>\
\
please see for example reports \cf2 \ul \ulc2 http://www.ish.com.au/node/1120 \cf0 \ulnone \
\

\b the essentials (custom report properties)
\b0 \
Each report has to be identified in the system, therefore it is given an unique parameter called 'keyCode'. to avoid confusion all reports created by ish group start with 'ish.' prefix. We strongly recommend that for any reports you customise, that you use a different prefix, like a name of the college.\
\
the keyCode can be edited in iReport using by choosing from the menu Edit->Custom properties\
\
other parameter which are compulsory are:\
versionNumber - an integer number, has to be increased eveyrtime a report is upgraded\
entity - identifies which is the starting point for the report, ie. report with value 'Certficate' will be available in print menu for list of certificates.\
isVisible - can only take value of 'true' or 'false', indicates whether the report is visible in the print dialog\
isSubreport - some reports are just injected inside others, this allows to specify this fact\
ish.oncourse.title, ish.oncourse.filePrefix and ish.onCourse.pdfFileName are currently not used, but should be set to prevent future problems.\
\
\

\b the design using iReport\

\b0 this section cannot be summarised in few words, there are many online resources which will help you learn using iReport. Good starting point is http://jasperforge.org/plugins/project/project_home.php?projectname=ireport \
\
There is one important thing to mention. onCourse utilises javaBean data source. This has its downsides, the report cannot be tested without importing it to onCourse. The database schema cannot be imported or read from iReport. But this is essential to assure security of the database and the data and prevent unauthorised access.\
\
For effective report writing a developer needs onCourse database schema. This document is available free of charge for all onCourse customers with support plan.\
\
the basic workflow for a report developer is:\
1. create the report file \
2. edit the report using iReport\
3. compile it using iReport\
4. import the report to onCourse (how to do this is covered in onCourse online manual)\
5. test it \
6. repeat steps 2-5 until the report works as intended.\
\
Future releases of onCourse will allow starting onCourse in a report developer mode, which will allow simple text editing of the report file without any need to exit onCourse. This feature is going to require installation of current JDK on the computer used for report compilation. \
\
We discourage starting with iReport from creating brand new reports. It is much easier to start with tweaking the existing reports.\
(Remember though, that if you edit an existing report or template you need to give it a new keyCode property, otherwise the next time onCourse server is restarted it is going to be lost in the system)\
\

\b onCourse specifics
\b0 \
The key to use jasper reports with onCourse is understanding how are the report fields mapped to values in onCourse database.\
\
The base of all reports is a customised data source, list of records. The selection is done by user by highlighting rows, and/or selecting appropriate values on the print dialog. Report engine will then iterate throughout the entities.\
\
The custom property 'entity' defines which database entity is used when producing the report.\
\
If you define a field in iReport, this field will be used to fetch the relevant data from the report entity. To find what fields are available you need to consult the onCourse database schema. The field data type has to be configured accordingly to the field in onCourse.\
Example: ClassListReport (see\cf2 \ul http://www.ish.com.au/node/1120 \cf0 \ulnone ) defines entity as CourseClass. From the database schema one can read that startDateTime is a 'Date' data type, and it can be set up as a report field accordingly.\
If then the 'startDateTime' field is used anywhere on the report, it will query the current CourseClass and get the value. \
\
Similarly the related data can be accessed. to-one relationships are easy, just take a name of the relationship, add '.' (dot) and then the name of the field in the related entity. \
Example: ClassListReport, entity CourseClass. field named 'course.name' will fetch the course, then its name and return that value.\
\
To-many relations are a little bit tricker, they return a list of related entities. onCourse uses a different keyword to indicate this: 'datasource', followed by the name of relationship. For example the list of enrolments for a given class can be accessed by 'datasource.enrolments' . \
\
Jasper report is oriented around filesystem, but onCourse is a full client-server database, filesystem cannot be used. This imposes some special limitations to how subreports are used. In onCourse to define a subreport you need to create a new field starting with keyword 'subreport' followed by dot and the keyCode of the subreport. ie. 'ish.onCourse.siteDetailRoomsSubReport'\
\
Few limitations:\
- not all the fields within the entity are advertised in the database schema. Example: 'fee_with_tax' in CourseClass. We will work on making sure all useable fields are advertised. \
- money values are stored in fields with a custom datatype called "Money". this datatype cannot be used in reports directly, adding a suffix '_forPrint' to the field name will translate the Money value to BigDecimal. example: for CourseClass database schema has a field 'feeExGST', to use it in reports you need to call the field feeExGST_forPrint'\
- you will notice some reports use special entities. those reports can only be customised to a small extent without modifications to onCourse code itself.\
\
\

\b additional properies
\b0 \
onCourse allows to add special conditions to the print dialog, ie. date range for printed data, checkbox etc.\
Configuration of  the additional properties is a little complex, so the best practice is to start from copying the setup from existing reports.\
This is an example of setup for adding a date range: \
	<property name="ish.oncourse.additionalProperty" value="transactionRange"/>\
	<property name="ish.oncourse.additionalProperty.visualElement" value="DateRange"/>	<property name="ish.oncourse.additionalProperty.displayLabel1" value="from"/>\
	<property name="ish.oncourse.additionalProperty.displayLabel2" value="to"/>\
	<property name="ish.oncourse.additionalProperty.defaultValue1" value="financialYearStart"/>\
	<property name="ish.oncourse.additionalProperty.defaultValue2" value="today"/>\
	<property name="ish.oncourse.additionalProperty.propertyName1" value="fromDate"/>\
	<property name="ish.oncourse.additionalProperty.propertyName2" value="toDate"/>\
	<property name="ish.oncourse.additionalProperty.datasource" value="datasource.transactions"/>\
\
This is another example adding a checkbox to filter cancelled classes:\
	<property name="ish.oncourse.additionalProperty" value="cancelledClasses"/>\
	<property name="ish.oncourse.additionalProperty.visualElement" value="Checkbox"/>	<property name="ish.oncourse.additionalProperty.displayLabel1" value="Include cancelled classes"/>\
	<property name="ish.oncourse.additionalProperty.defaultValue1" value="false"/>\
	<property name="ish.oncourse.additionalProperty.propertyName1" value="isCancelled"/>\
	<property name="ish.oncourse.additionalProperty.datasource" value=""/>\
	<property name="ish.oncourse.additionalProperty.condition" value="null"/>\
\
ish.oncourse.additionalProperty is just a name, does not have any other meaning.\
ish.oncourse.additionalProperty.visualElement is name of the visual element: valid values: Checkbox, DateRange, Timetable, Statement\
displayLabel/property/defaultValue are: label for the additional field, property affected, and default value respectively.\
\
ish.oncourse.additionalProperty.datasource can be used if the related datasource (for subreport) has to be limited.\
\
condition is not meant to be used at the moment. (valid values:  "&lt;", "&gt;", "current")\
proxyObjecs are used internally for some reports, they are not designed to use for custom reports (yet)\
\
\
\
\

\b onCourse report developer options
\b0 \
this section is about the report editor in onCourse.\
\
}