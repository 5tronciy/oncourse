dependencies {
	compile 'ish.oncourse.willow:waCommon:5.1.19'

	compile 'javax.jmdns:jmdns:3.4.1'
	compile 'javax.mail:mail:1.4.6'
	compile 'org.apache.cayenne:cayenne-client:3.2M1.2'
	compile 'commons-httpclient:commons-httpclient:3.1'
	compile 'org.apache.commons:commons-lang3:3.3.2'
	compile 'net.java.dev.textile-j:textile-j:2.2.864'
	compile 'commons-io:commons-io:2.4'
	compile 'com.google.inject:guice:3.0'
    compile ('net.java.dev.jets3t:jets3t:0.9.2')
}

jar {
	manifest {
		from sharedManifest
	}
}

task testSecureRandom(dependsOn: testClasses) << {
	if (new File("build/randomPasswordTest.txt").exists()) {
		new File("build/randomPasswordTest.txt").delete();
	}

	for (int i=0;i<100;i++) {
		//its important to fork
		ant.java(
			classname: 'ish.util.SecurityUtilTest',
			fork: true,
			classpath: sourceSets.test.runtimeClasspath.asPath,
			dir: project.projectDir,
			failonerror: true) {
		}

		// read the file, store the strings in a list for easy access
		List<String> lines = new ArrayList<String>();
		new BufferedReader(new FileReader("build/randomPasswordTest.txt"))
    	 	.eachLine(){ s ->
      			lines.add(s);
		}

		// get last generated item, remove from the list
		String lastAdded = lines.get(lines.size()-1)
		lines.remove(lines.size()-1);

		assert !lines.contains(lastAdded)

		if (i%10 == 0) {
			println "Generated ${i} random hashes..."
		}
	}
}
